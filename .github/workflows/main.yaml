name: Create release
on:
  pull_request:
    types:
      - closed
    branches:
      - main

env:
  POETRY_VERSION: "1.2.2"
  PYTHON_BUILD_VERSION: "3.10"
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'

    - uses: actions/setup-python@v4
      with:
        python-version: ${{env.PYTHON_BUILD_VERSION}}

    - name: cache poetry install
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: poetry-${{ env.POETRY_VERSION }}-py${{env.PYTHON_BUILD_VERSION}}-0 # Update 0 to invalidate cache

    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.3.2
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    # TODO: Cache dependencies

    - name: Bump version and push tag
      id: tagger
      uses: anothrNick/github-tag-action@1.61.0 # Don't use @master unless you're happy to test the latest version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
    
    # Version bump for poetry
    - name: version-bump
      env:
        PACKAGE_VERSION: ${{steps.tagger.outputs.new_tag}}
      shell: bash
      run: |
        poetry version $PACKAGE_VERSION
        poetry build

    # Build package and publish to pypi
    - name: Build and publish package
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
      shell: bash
      run: |
        poetry build
        poetry publish


    # Create release on GitHub
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tagger.outputs.new_tag}}
        generate_release_notes: true
        target_commitish: ${{ github.sha }}
        prerelease: false
        files: |
          dist/*.whl
          dist/*.tar.gz 
